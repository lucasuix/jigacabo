#ifndef MULTIPLEXER
#define MULTIPLEXER

#include <stdint.h>
#include <stdlib.h>
#include "driver/gpio.h"

typedef enum {

	ENABLE,
	DISABLE

} MultiplexerState;

typedef enum {
	
	LOW_SIG,
	HIGH_SIG

} MultiplexerSignal;

typedef struct {

	MultiplexerState state;
	int enable_gpio;
	
	MultiplexerSignal signal;
	int signal_gpio;
	
	int s_gpios[4];

	uint8_t current_channel;
	uint16_t channel_pattern;

} Multiplexer;

void setMultiplexerState(Multiplexer *multiplex, MultiplexerState new_state);
void setMultiplexerS_GPIOS(Multiplexer *multiplex, int *s_gpios_array);
void selectMultiplexerChannel(Multiplexer *multiplex, uint8_t new_channel);
void writeMultiplexerSignal(Multiplexer *multiplex, MultiplexerSignal new_signal);
void readMultiplexerSignal(Multiplexer *multiplex);
void readMultiplexerChannelPattern(Multiplexer *multiplex);

/* CÓDIGO DO USUÁRIO AQUI */

extern Multiplexer multiplex[4];
void gpioMultiplexerInit(void);
void startMultiplexers(void);

#endif


